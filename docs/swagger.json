{
    "swagger": "2.0",
    "info": {
        "description": "This is a sample swagger for Fiber",
        "title": "Finance Forge Server",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "email": "fiber@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:8000",
    "basePath": "/",
    "paths": {
        "/api/contract/borrowed": {
            "get": {
                "description": "Retrieves the total borrowed amount from the blockchain",
                "tags": [
                    "contract"
                ],
                "summary": "Retrieve total borrowed amount",
                "responses": {
                    "200": {
                        "description": "Successful retrieval",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Borrow"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/contract/borrowed/{account}": {
            "get": {
                "description": "Retrieves the amount borrowed by an account from the blockchain",
                "tags": [
                    "contract"
                ],
                "summary": "Retrieve borrowed amount",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Account address",
                        "name": "account",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful retrieval",
                        "schema": {
                            "$ref": "#/definitions/handlers.BorrowedAmountResponse"
                        }
                    },
                    "404": {
                        "description": "Account not found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/contract/earned/{account}": {
            "get": {
                "description": "Retrieves the amount earned by an account from the blockchain",
                "tags": [
                    "contract"
                ],
                "summary": "Retrieve earned amount",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Account address",
                        "name": "account",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful retrieval",
                        "schema": {
                            "$ref": "#/definitions/handlers.EarnedResponse"
                        }
                    },
                    "404": {
                        "description": "Account not found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/contract/lent": {
            "get": {
                "description": "Retrieves the total lent amount from the blockchain",
                "tags": [
                    "contract"
                ],
                "summary": "Retrieve total lent amount",
                "responses": {
                    "200": {
                        "description": "Successful retrieval",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Lent"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/contract/rate/interest": {
            "get": {
                "description": "Retrieves the general interest rate from the blockchain",
                "tags": [
                    "contract"
                ],
                "summary": "Retrieve interest rate",
                "responses": {
                    "200": {
                        "description": "Successful retrieval",
                        "schema": {
                            "$ref": "#/definitions/handlers.RateResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/contract/rate/reward": {
            "get": {
                "description": "Retrieves the general reward rate from the blockchain",
                "tags": [
                    "contract"
                ],
                "summary": "Retrieve reward rate",
                "responses": {
                    "200": {
                        "description": "Successful retrieval",
                        "schema": {
                            "$ref": "#/definitions/handlers.RateResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/contract/repaid": {
            "get": {
                "description": "Retrieves the total repaid amount from the blockchain",
                "tags": [
                    "contract"
                ],
                "summary": "Retrieve total repaid amount",
                "responses": {
                    "200": {
                        "description": "Successful retrieval",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Repay"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/contract/reward": {
            "get": {
                "description": "Retrieves the total reward amount from the blockchain",
                "tags": [
                    "contract"
                ],
                "summary": "Retrieve total reward amount",
                "responses": {
                    "200": {
                        "description": "Successful retrieval",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Reward"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/contract/staked": {
            "get": {
                "description": "Retrieves the total staked amount from the blockchain",
                "tags": [
                    "contract"
                ],
                "summary": "Retrieve total staked amount",
                "responses": {
                    "200": {
                        "description": "Successful retrieval",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Stake"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/contract/user/{account}": {
            "get": {
                "description": "Retrieves user information from the blockchain using the address",
                "tags": [
                    "contract"
                ],
                "summary": "Retrieve user information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User address",
                        "name": "account",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful retrieval",
                        "schema": {
                            "$ref": "#/definitions/handlers.UserResponse"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/contract/withdrawn": {
            "get": {
                "description": "Retrieves the total withdrawn amount from the blockchain",
                "tags": [
                    "contract"
                ],
                "summary": "Retrieve total withdrawn amount",
                "responses": {
                    "200": {
                        "description": "Successful retrieval",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Withdraw"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/token/allowance": {
            "get": {
                "description": "Returns the remaining number of tokens that the spender is allowed to spend on behalf of the owner",
                "tags": [
                    "token"
                ],
                "summary": "Retrieve remaining token allowance",
                "parameters": [
                    {
                        "type": "string",
                        "description": "owner address",
                        "name": "owner",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "spender address",
                        "name": "spender",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful retrieval",
                        "schema": {
                            "$ref": "#/definitions/handlers.AllowanceResponse"
                        }
                    },
                    "404": {
                        "description": "Allowance not found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/token/approvals": {
            "get": {
                "description": "Returns all the approvals that have happened on the blockchain and captured by the server",
                "tags": [
                    "token"
                ],
                "summary": "Retrieve all approvals",
                "responses": {
                    "200": {
                        "description": "Successful retrieval",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Approval"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/token/balance/{account}": {
            "get": {
                "description": "Returns the value of tokens owned by the specified account",
                "tags": [
                    "token"
                ],
                "summary": "Retrieve account balance",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Account address",
                        "name": "account",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful retrieval",
                        "schema": {
                            "$ref": "#/definitions/handlers.BalanceResponse"
                        }
                    },
                    "404": {
                        "description": "Account not found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/token/transfers": {
            "get": {
                "description": "Returns all the transfers that have happened on the blockchain and captured by the server",
                "tags": [
                    "token"
                ],
                "summary": "Retrieve all transfers",
                "responses": {
                    "200": {
                        "description": "Successful retrieval",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Transfer"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handlers.AllowanceResponse": {
            "type": "object",
            "properties": {
                "allowance": {
                    "type": "string"
                }
            }
        },
        "handlers.BalanceResponse": {
            "type": "object",
            "properties": {
                "balance": {
                    "type": "string"
                }
            }
        },
        "handlers.BorrowedAmountResponse": {
            "type": "object",
            "properties": {
                "borrowed": {
                    "type": "string"
                }
            }
        },
        "handlers.EarnedResponse": {
            "type": "object",
            "properties": {
                "earned": {
                    "type": "string"
                }
            }
        },
        "handlers.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "handlers.RateResponse": {
            "type": "object",
            "properties": {
                "rate": {
                    "type": "string"
                }
            }
        },
        "handlers.UserResponse": {
            "type": "object",
            "properties": {
                "borrowedBalance": {
                    "type": "string"
                },
                "collateralBalance": {
                    "type": "string"
                },
                "lastUpdated": {
                    "type": "string"
                },
                "lendingBalance": {
                    "type": "string"
                },
                "rewards": {
                    "type": "string"
                },
                "stakingBalance": {
                    "type": "string"
                }
            }
        },
        "models.Approval": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "owner": {
                    "type": "string"
                },
                "spender": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "models.Borrow": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "amount": {
                    "type": "string"
                },
                "collateral": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "models.Lent": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "amount": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "models.Repay": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "amount": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "models.Reward": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "reward": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "models.Stake": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "amount": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "models.Transfer": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "from": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "to": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "models.Withdraw": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "amount": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        }
    }
}